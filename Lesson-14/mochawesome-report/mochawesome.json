{
  "stats": {
    "suites": 6,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-17T17:46:45.320Z",
    "end": "2023-07-17T17:46:45.337Z",
    "duration": 17,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fa35714e-093a-464b-8cd4-eb438af3fea2",
      "title": "",
      "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
      "file": "/test/testing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "401ea9c1-f5cb-4ae0-858b-f2e55db16911",
          "title": "Calculator",
          "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
          "file": "/test/testing.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Calculator\"",
              "fullTitle": "Calculator \"before each\" hook in \"Calculator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator();",
              "err": {},
              "uuid": "6eee32b5-c3ba-4595-a4d7-c0e9e50ef1c9",
              "parentUUID": "401ea9c1-f5cb-4ae0-858b-f2e55db16911",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bc081015-e868-4a78-902b-b38ecfaf082b",
              "title": "add",
              "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
              "file": "/test/testing.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the sum of numbers",
                  "fullTitle": "Calculator add should return the sum of numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.add([2, 4, 6]);\nexpect(result).to.equal(12);",
                  "err": {},
                  "uuid": "c1843e00-e78b-45ad-aadb-471a18f31ede",
                  "parentUUID": "bc081015-e868-4a78-902b-b38ecfaf082b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 0 if no numbers are provided",
                  "fullTitle": "Calculator add should return 0 if no numbers are provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.add([]);\nexpect(result).to.equal(0);",
                  "err": {},
                  "uuid": "cf61d508-7a66-4301-8875-584200a77f36",
                  "parentUUID": "bc081015-e868-4a78-902b-b38ecfaf082b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the number itself if only one number is provided",
                  "fullTitle": "Calculator add should return the number itself if only one number is provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.add([5]);\nexpect(result).to.equal(5);",
                  "err": {},
                  "uuid": "bf38aa5c-8ee1-4844-a8cd-c81524b9c2a2",
                  "parentUUID": "bc081015-e868-4a78-902b-b38ecfaf082b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 0 if we add inverse numbers",
                  "fullTitle": "Calculator add should return 0 if we add inverse numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.add([-5, 5]);\nexpect(result).to.equal(0);",
                  "err": {},
                  "uuid": "2673c23b-5c8a-4b01-a75f-41222e16ce3d",
                  "parentUUID": "bc081015-e868-4a78-902b-b38ecfaf082b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1843e00-e78b-45ad-aadb-471a18f31ede",
                "cf61d508-7a66-4301-8875-584200a77f36",
                "bf38aa5c-8ee1-4844-a8cd-c81524b9c2a2",
                "2673c23b-5c8a-4b01-a75f-41222e16ce3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7d64bb34-1b55-446f-ab7a-0348fb9c3ed6",
              "title": "multiply",
              "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
              "file": "/test/testing.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the multiply of numbers",
                  "fullTitle": "Calculator multiply should return the multiply of numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.multiply(2, 3, 4);\nexpect(result).to.equal(24);",
                  "err": {},
                  "uuid": "8339f794-9fb2-4c17-a77d-ba63d36bffaa",
                  "parentUUID": "7d64bb34-1b55-446f-ab7a-0348fb9c3ed6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 0 if any of the numbers is 0",
                  "fullTitle": "Calculator multiply should return 0 if any of the numbers is 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.multiply(5, 0, 10);\nexpect(result).to.equal(0);",
                  "err": {},
                  "uuid": "4f1b2fd4-1d9f-4a19-9f86-25b925c34506",
                  "parentUUID": "7d64bb34-1b55-446f-ab7a-0348fb9c3ed6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the number itself if only one number is provided",
                  "fullTitle": "Calculator multiply should return the number itself if only one number is provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.multiply(7);\nexpect(result).to.equal(7);",
                  "err": {},
                  "uuid": "0ef9f8e8-8db8-4cc9-925a-e25a150dbbcb",
                  "parentUUID": "7d64bb34-1b55-446f-ab7a-0348fb9c3ed6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 0 if no numbers are provided",
                  "fullTitle": "Calculator multiply should return 0 if no numbers are provided",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.multiply([]);\nexpect(result).to.equal(0);",
                  "err": {},
                  "uuid": "1a768901-2505-4299-9326-ced2bdb4aa62",
                  "parentUUID": "7d64bb34-1b55-446f-ab7a-0348fb9c3ed6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8339f794-9fb2-4c17-a77d-ba63d36bffaa",
                "4f1b2fd4-1d9f-4a19-9f86-25b925c34506",
                "0ef9f8e8-8db8-4cc9-925a-e25a150dbbcb",
                "1a768901-2505-4299-9326-ced2bdb4aa62"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ca565008-09cb-4869-83d7-2dbc5f35f154",
              "title": "subtraction",
              "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
              "file": "/test/testing.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the difference of two numbers",
                  "fullTitle": "Calculator subtraction should return the difference of two numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.subtraction(10, 4);\nexpect(result).to.equal(6);",
                  "err": {},
                  "uuid": "3f7ef48b-f689-4327-94d7-446354e59d58",
                  "parentUUID": "ca565008-09cb-4869-83d7-2dbc5f35f154",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a negative value if the subtrahend is greater than the reduced",
                  "fullTitle": "Calculator subtraction should return a negative value if the subtrahend is greater than the reduced",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.subtraction(5, 10);\nexpect(result).to.equal(-5);",
                  "err": {},
                  "uuid": "50508c36-60a6-45a6-a023-3fc3add37479",
                  "parentUUID": "ca565008-09cb-4869-83d7-2dbc5f35f154",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f7ef48b-f689-4327-94d7-446354e59d58",
                "50508c36-60a6-45a6-a023-3fc3add37479"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ffc80302-4598-4725-bf17-b903d516309b",
              "title": "divide",
              "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
              "file": "/test/testing.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the division of two numbers",
                  "fullTitle": "Calculator divide should return the division of two numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.divide(12, 3);\nexpect(result).to.equal(4);",
                  "err": {},
                  "uuid": "cbf8b7c8-e1c2-4e26-b8ee-cfcc15bf2ccb",
                  "parentUUID": "ffc80302-4598-4725-bf17-b903d516309b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return Infinity if the divider is 0",
                  "fullTitle": "Calculator divide should return Infinity if the divider is 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.divide(10, 0);\nexpect(result).to.equal(Infinity);",
                  "err": {},
                  "uuid": "ea15fcd2-9d63-4bf0-a75b-d44f399e2b6f",
                  "parentUUID": "ffc80302-4598-4725-bf17-b903d516309b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbf8b7c8-e1c2-4e26-b8ee-cfcc15bf2ccb",
                "ea15fcd2-9d63-4bf0-a75b-d44f399e2b6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f3732fc1-ac77-47c2-b508-4b13fc759212",
              "title": "exponentiation",
              "fullFile": "/Users/robertkuchynski/Documents/GitHub/HomeTasks-1/Lesson-14/test/testing.spec.js",
              "file": "/test/testing.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the square of the number",
                  "fullTitle": "Calculator exponentiation should return the square of the number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.exponentiation(4);\nexpect(result).to.equal(16);",
                  "err": {},
                  "uuid": "6f37c9be-ba7d-4854-af23-b33194d592af",
                  "parentUUID": "f3732fc1-ac77-47c2-b508-4b13fc759212",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 0 if the number is 0",
                  "fullTitle": "Calculator exponentiation should return 0 if the number is 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.exponentiation(0);\nexpect(result).to.equal(0);",
                  "err": {},
                  "uuid": "4b1b1e68-63e0-4e0a-a478-0ad46b7fbbbe",
                  "parentUUID": "f3732fc1-ac77-47c2-b508-4b13fc759212",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 16 if the number is -4",
                  "fullTitle": "Calculator exponentiation should return 16 if the number is -4",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = calculator.exponentiation(-4);\nexpect(result).to.equal(16);",
                  "err": {},
                  "uuid": "094efd58-1885-4c46-a25e-f901c48cbac4",
                  "parentUUID": "f3732fc1-ac77-47c2-b508-4b13fc759212",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f37c9be-ba7d-4854-af23-b33194d592af",
                "4b1b1e68-63e0-4e0a-a478-0ad46b7fbbbe",
                "094efd58-1885-4c46-a25e-f901c48cbac4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}